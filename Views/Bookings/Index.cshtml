@model IEnumerable<TourismApp.Models.Booking>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "My Bookings";
    var bookings = Model?.ToList() ?? new List<TourismApp.Models.Booking>();
    var bookingsByStatus = bookings.GroupBy(b => b.Status).ToList();
    var totalBookings = bookings.Count;
    var upcomingBookings = bookings.Count(b => b.Status == TourismApp.Models.BookingStatus.Pending || b.Status == TourismApp.Models.BookingStatus.Confirmed);
}

<section class="space-y-8">
    <div class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
        <div>
            <h1 class="heading">My bookings</h1>
            <p class="section-subtitle">Track reservations, payment states, and feedback moments.</p>
        </div>
        <div class="rounded-2xl border border-slate-200 bg-white px-4 py-3 text-sm text-slate-500 shadow-sm">
            <span class="font-semibold text-slate-900">@totalBookings</span> total Â· <span class="font-semibold text-slate-900">@upcomingBookings</span> upcoming
        </div>
    </div>

    @if (TempData["Msg"] is string ok)
    {
        <div class="rounded-2xl border border-emerald-200 bg-emerald-50 px-4 py-3 text-sm text-emerald-700 shadow-sm">@ok</div>
    }
    @if (TempData["Error"] is string err)
    {
        <div class="rounded-2xl border border-rose-200 bg-rose-50 px-4 py-3 text-sm text-rose-600 shadow-sm">@err</div>
    }

    @if (!bookings.Any())
    {
        <div class="empty-state">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-slate-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10m-12 8h14a2 2 0 002-2V7a2 2 0 00-2-2h-3m-8 0H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            <p class="text-base font-semibold text-slate-700">No bookings yet</p>
            <p class="text-sm text-slate-500">Ready for your next adventure?</p>
            <a asp-controller="Tours" asp-action="Index" class="btn-primary px-5 py-2.5">Browse tours</a>
        </div>
    }
    else
    {
        <div class="grid gap-4 md:grid-cols-2 xl:grid-cols-4">
            @foreach (var group in bookingsByStatus)
            {
                <div class="card border border-transparent bg-white p-5">
                    <p class="text-xs uppercase tracking-wide text-slate-400">@group.Key</p>
                    <p class="mt-3 text-2xl font-semibold text-slate-900">@group.Count()</p>
                    <p class="mt-1 text-xs text-slate-400">Latest update @group.Max(x => x.CreatedAt).ToString("MMM dd, yyyy")</p>
                </div>
            }
        </div>

        <div class="table-shell">
            <table>
                <thead>
                    <tr>
                        <th>Tour</th>
                        <th>Date</th>
                        <th>Participants</th>
                        <th>Status</th>
                        <th>Payment</th>
                        <th>Feedback</th>
                        <th class="text-right">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-slate-100">
                    @foreach (var booking in bookings.OrderByDescending(x => x.CreatedAt))
                    {
                        var statusBadge = booking.Status switch
                        {
                            TourismApp.Models.BookingStatus.Pending => "badge badge-warning",
                            TourismApp.Models.BookingStatus.Confirmed => "badge badge-info",
                            TourismApp.Models.BookingStatus.Completed => "badge badge-success",
                            TourismApp.Models.BookingStatus.Cancelled => "badge",
                            _ => "badge"
                        };
                        var paymentBadge = booking.PaymentStatus switch
                        {
                            TourismApp.Models.PaymentStatus.Paid => "badge badge-success",
                            TourismApp.Models.PaymentStatus.Pending => "badge badge-warning",
                            TourismApp.Models.PaymentStatus.Failed => "badge badge-danger",
                            TourismApp.Models.PaymentStatus.Refunded => "badge badge-info",
                            _ => "badge"
                        };
                        <tr>
                            <td class="px-4 py-3">
                                <div class="font-semibold text-slate-900">@booking.TourDate.TourPackage.Title</div>
                                <p class="text-xs text-slate-400">Booked @booking.CreatedAt.ToString("MMM dd, yyyy")</p>
                            </td>
                            <td class="px-4 py-3">
                                <div class="font-medium text-slate-900">@booking.TourDate.Date.ToString("MMM dd, yyyy")</div>
                                <p class="text-xs text-slate-400">@booking.TourDate.Date.ToString("dddd")</p>
                            </td>
                            <td class="px-4 py-3">
                                <span class="badge">@booking.Participants @(booking.Participants == 1 ? "person" : "people")</span>
                            </td>
                            <td class="px-4 py-3">
                                <span class="@statusBadge">@booking.Status</span>
                            </td>
                            <td class="px-4 py-3">
                                <span class="@paymentBadge">@booking.PaymentStatus</span>
                            </td>
                            <td class="px-4 py-3">
                                @if (booking.Status == TourismApp.Models.BookingStatus.Completed && booking.Feedback == null)
                                {
                                    <a asp-controller="Feedbacks" asp-action="Create" asp-route-bookingId="@booking.Id" class="btn-outline px-4 py-1.5 text-xs font-semibold">Leave review</a>
                                }
                                else if (booking.Feedback != null)
                                {
                                    <span class="badge badge-success">Reviewed</span>
                                }
                                else
                                {
                                    <span class="badge">Pending</span>
                                }
                            </td>
                            <td class="px-4 py-3 text-right">
                                @if (booking.Status == TourismApp.Models.BookingStatus.Pending || booking.Status == TourismApp.Models.BookingStatus.Confirmed)
                                {
                                    <form asp-action="Cancel" method="post" class="inline-flex" onsubmit="return confirm('Are you sure you want to cancel this booking?');">
                                        <input type="hidden" name="id" value="@booking.Id" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn-outline px-4 py-1.5 text-xs font-semibold text-rose-600 hover:bg-rose-50">Cancel</button>
                                    </form>
                                }
                                else if (booking.Status == TourismApp.Models.BookingStatus.Cancelled)
                                {
                                    <span class="text-xs text-slate-400">Cancelled</span>
                                }
                                else if (booking.Status == TourismApp.Models.BookingStatus.Completed)
                                {
                                    <span class="text-xs text-emerald-500">Completed</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</section>

@model IEnumerable<TourismApp.Models.Feedback>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Customer Feedbacks";
    var packages = ViewBag.Packages as IEnumerable<TourismApp.Models.TourPackage> ?? Enumerable.Empty<TourismApp.Models.TourPackage>();
    int? selectedPackageId = ViewBag.SelectedPackageId as int?;
    var feedbacks = Model?.ToList() ?? new List<TourismApp.Models.Feedback>();
}

<section class="space-y-8">
    <div class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
        <div>
            <h1 class="heading">Customer feedback</h1>
            <p class="section-subtitle">Understand traveller sentiment across your portfolio.</p>
        </div>
    </div>

    @if (TempData["Msg"] is string ok)
    {
        <div class="rounded-2xl border border-emerald-200 bg-emerald-50 px-4 py-3 text-sm text-emerald-700 shadow-sm">@ok</div>
    }
    @if (TempData["Error"] is string err)
    {
        <div class="rounded-2xl border border-rose-200 bg-rose-50 px-4 py-3 text-sm text-rose-600 shadow-sm">@err</div>
    }

    <form asp-action="Agency" method="get" class="card p-6">
        <div class="form-field max-w-md">
            <label for="packageSelect" class="form-label">Filter by package</label>
            <select name="packageId" id="packageSelect" class="input" onchange="this.form.submit()">
                <option value="">All packages</option>
                @foreach (var pkg in packages)
                {
                    var isSelected = selectedPackageId == pkg.Id;
                    if (isSelected)
                    {
                        <option value="@pkg.Id" selected>@pkg.Title</option>
                    }
                    else
                    {
                        <option value="@pkg.Id">@pkg.Title</option>
                    }
                }
            </select>
        </div>
    </form>

    @if (!feedbacks.Any())
    {
        <div class="empty-state">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-slate-300" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.6">
                <path stroke-linecap="round" stroke-linejoin="round" d="M7 8h10M7 12h5m2 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v10a2 2 0 01-2 2h-3z" />
            </svg>
            @if (selectedPackageId.HasValue)
            {
                var selectedPackage = packages.FirstOrDefault(p => p.Id == selectedPackageId);
                <p class="text-sm text-slate-500">No feedback received yet for "@selectedPackage?.Title".</p>
            }
            else
            {
                <p class="text-sm text-slate-500">No feedback received yet for your tour packages.</p>
            }
        </div>
    }
    else
    {
        <div class="grid gap-4 md:grid-cols-2 xl:grid-cols-4">
            <div class="card border border-transparent bg-white p-6">
                <p class="text-xs uppercase tracking-wide text-slate-400">Total reviews</p>
                <p class="mt-3 text-3xl font-semibold text-slate-900">@feedbacks.Count</p>
            </div>
            <div class="card border border-transparent bg-white p-6">
                <p class="text-xs uppercase tracking-wide text-slate-400">Average rating</p>
                <p class="mt-3 text-3xl font-semibold text-slate-900">@feedbacks.Average(f => f.Rating).ToString("F1")</p>
            </div>
            <div class="card border border-transparent bg-white p-6">
                <p class="text-xs uppercase tracking-wide text-slate-400">5-star reviews</p>
                <p class="mt-3 text-3xl font-semibold text-slate-900">@feedbacks.Count(f => f.Rating == 5)</p>
            </div>
            <div class="card border border-transparent bg-white p-6">
                <p class="text-xs uppercase tracking-wide text-slate-400">Recent (30 days)</p>
                <p class="mt-3 text-3xl font-semibold text-slate-900">@feedbacks.Count(f => f.CreatedAt >= DateTime.UtcNow.AddDays(-30))</p>
            </div>
        </div>

        <div class="space-y-4">
            @foreach (var feedback in feedbacks.OrderByDescending(f => f.CreatedAt))
            {
                <article class="card p-6">
                    <div class="flex flex-col gap-4 md:flex-row md:items-start md:justify-between">
                        <div>
                            <h3 class="text-lg font-semibold text-slate-900">@feedback.Booking!.TourDate!.TourPackage!.Title</h3>
                            <p class="text-xs uppercase tracking-wide text-slate-400">@feedback.Booking.TourDate.Date.ToString("yyyy-MM-dd")</p>
                        </div>
                        <div class="text-right">
                            <div class="flex justify-end gap-1 text-amber-400">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="currentColor">
                                        <path d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.176 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L4.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" opacity="@(i <= feedback.Rating ? "1" : "0.2")" />
                                    </svg>
                                }
                            </div>
                            <p class="text-xs text-slate-400">@feedback.CreatedAt.ToString("MMM dd, yyyy")</p>
                        </div>
                    </div>
                    <div class="mt-4 space-y-3">
                        @if (!string.IsNullOrWhiteSpace(feedback.Comment))
                        {
                            <p class="text-sm text-slate-600">@feedback.Comment</p>
                        }
                        else
                        {
                            <p class="text-sm italic text-slate-400">No comment provided.</p>
                        }
                        <div class="flex flex-wrap gap-4 border-t border-slate-100 pt-3 text-xs text-slate-400">
                            <span>@feedback.Booking.Participants participants</span>
                            <span>@feedback.Booking.User!.Email</span>
                            <span>Booking #@feedback.Booking.Id</span>
                        </div>
                    </div>
                </article>
            }
        </div>
    }
</section>


